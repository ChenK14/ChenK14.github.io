{"ast":null,"code":"var _jsxFileName = \"/Users/chenk/performance/preformace/src/App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport useGoogleCharts from \"./useGoogleCharts\";\nimport PerformanceTimeline from \"./PerformanceTimeline\";\nimport { Multiselect } from \"multiselect-react-dropdown\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const google = useGoogleCharts();\n  const types = [];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Multiselect, {\n      options: types // Options to display in the dropdown\n      ,\n      selectedValues: types // Preselected value to persist in dropdown\n      ,\n      onSelect: this.onSelect // Function will trigger on select event\n      ,\n      onRemove: this.onRemove // Function will trigger on remove event\n      ,\n      displayValue: \"name\" // Property name to display in the dropdown options\n\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(PerformanceTimeline, {\n      google: google,\n      filter: []\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"eVu+yGnbMPHAl3QiuVnLPazsK4Q=\", false, function () {\n  return [useGoogleCharts];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/chenk/performance/preformace/src/App.js"],"names":["useGoogleCharts","PerformanceTimeline","Multiselect","App","google","types","onSelect","onRemove"],"mappings":";;;AAAA,OAAO,WAAP;AACA,OAAOA,eAAP,MAA4B,mBAA5B;AACA,OAAOC,mBAAP,MAAgC,uBAAhC;AACA,SAAQC,WAAR,QAA0B,4BAA1B;;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAMC,MAAM,GAAGJ,eAAe,EAA9B;AACA,QAAMK,KAAK,GAAC,EAAZ;AAEA,sBACE;AAAA,4BACI,QAAC,WAAD;AACI,MAAA,OAAO,EAAEA,KADb,CACoB;AADpB;AAEI,MAAA,cAAc,EAAEA,KAFpB,CAE2B;AAF3B;AAGI,MAAA,QAAQ,EAAE,KAAKC,QAHnB,CAG6B;AAH7B;AAII,MAAA,QAAQ,EAAE,KAAKC,QAJnB,CAI6B;AAJ7B;AAKI,MAAA,YAAY,EAAC,MALjB,CAKwB;;AALxB;AAAA;AAAA;AAAA;AAAA,YADJ,eAQE,QAAC,mBAAD;AAAqB,MAAA,MAAM,EAAEH,MAA7B;AAAqC,MAAA,MAAM,EAAE;AAA7C;AAAA;AAAA;AAAA;AAAA,YARF;AAAA,kBADF;AAYD;;GAhBQD,G;UACQH,e;;;KADRG,G;AAkBT,eAAeA,GAAf","sourcesContent":["import \"./App.css\";\nimport useGoogleCharts from \"./useGoogleCharts\";\nimport PerformanceTimeline from \"./PerformanceTimeline\";\nimport {Multiselect} from \"multiselect-react-dropdown\";\n\nfunction App() {\n  const google = useGoogleCharts();\n  const types=[]\n\n  return (\n    <>\n        <Multiselect\n            options={types} // Options to display in the dropdown\n            selectedValues={types} // Preselected value to persist in dropdown\n            onSelect={this.onSelect} // Function will trigger on select event\n            onRemove={this.onRemove} // Function will trigger on remove event\n            displayValue=\"name\" // Property name to display in the dropdown options\n        />\n      <PerformanceTimeline google={google} filter={[]} />\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}