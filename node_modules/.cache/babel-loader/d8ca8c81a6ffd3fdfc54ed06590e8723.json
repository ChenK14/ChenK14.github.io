{"ast":null,"code":"import _slicedToArray from\"/Users/chenk/performance/ChenK14.github.io/chenk14.github.io/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import\"./App.css\";import useGoogleCharts from\"./useGoogleCharts\";import PerformanceTimeline from\"./PerformanceTimeline\";import{Multiselect}from\"multiselect-react-dropdown\";import{useState}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var App=function App(){window.addEventListener(\"message\",function(event){console.log(event.data);});var google=useGoogleCharts();var types=[{name:\"resource\",id:1},{name:\"mark\",id:2},{name:\"measure\",id:3},{name:\"paint\",id:4},{name:\"navigation\",id:5},{name:\"first-input\",id:6},{name:\"frog calls\",id:7}];var _useState=useState(types),_useState2=_slicedToArray(_useState,2),filters=_useState2[0],setFilters=_useState2[1];function onSelect(selectedList,_selectedItem){setFilters(selectedList);}function onRemove(selectedList,_removedItem){setFilters(selectedList);}return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Multiselect,{options:types// Options to display in the dropdown\n,selectedValues:filters// Preselected value to persist in dropdown\n,onSelect:onSelect// Function will trigger on select event\n,onRemove:onRemove// Function will trigger on remove event\n,displayValue:\"name\"// Property name to display in the dropdown options\n,placeholder:\"Please select filter\",showCheckbox:true,closeOnSelect:true}),/*#__PURE__*/_jsx(PerformanceTimeline,{google:google,filters:filters})]});};export default App;","map":{"version":3,"sources":["/Users/chenk/performance/ChenK14.github.io/chenk14.github.io/src/App.js"],"names":["useGoogleCharts","PerformanceTimeline","Multiselect","useState","App","window","addEventListener","event","console","log","data","google","types","name","id","filters","setFilters","onSelect","selectedList","_selectedItem","onRemove","_removedItem"],"mappings":"kJAAA,MAAO,WAAP,CACA,MAAOA,CAAAA,eAAP,KAA4B,mBAA5B,CACA,MAAOC,CAAAA,mBAAP,KAAgC,uBAAhC,CACA,OAASC,WAAT,KAA4B,4BAA5B,CACA,OAASC,QAAT,KAAyB,OAAzB,C,6IAEA,GAAMC,CAAAA,GAAG,CAAG,QAANA,CAAAA,GAAM,EAAM,CAEhBC,MAAM,CAACC,gBAAP,CAAwB,SAAxB,CAAmC,SAACC,KAAD,CAAW,CAC5CC,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,IAAlB,EACD,CAFD,EAIA,GAAMC,CAAAA,MAAM,CAAGX,eAAe,EAA9B,CACA,GAAMY,CAAAA,KAAK,CAAG,CACZ,CAAEC,IAAI,CAAE,UAAR,CAAoBC,EAAE,CAAE,CAAxB,CADY,CAEZ,CAAED,IAAI,CAAE,MAAR,CAAgBC,EAAE,CAAE,CAApB,CAFY,CAGZ,CAAED,IAAI,CAAE,SAAR,CAAmBC,EAAE,CAAE,CAAvB,CAHY,CAIZ,CAAED,IAAI,CAAE,OAAR,CAAiBC,EAAE,CAAE,CAArB,CAJY,CAKZ,CAAED,IAAI,CAAE,YAAR,CAAsBC,EAAE,CAAE,CAA1B,CALY,CAMZ,CAAED,IAAI,CAAE,aAAR,CAAuBC,EAAE,CAAE,CAA3B,CANY,CAOZ,CAAED,IAAI,CAAE,YAAR,CAAsBC,EAAE,CAAE,CAA1B,CAPY,CAAd,CASA,cAA8BX,QAAQ,CAACS,KAAD,CAAtC,wCAAOG,OAAP,eAAgBC,UAAhB,eAEA,QAASC,CAAAA,QAAT,CAAkBC,YAAlB,CAAgCC,aAAhC,CAA+C,CAC7CH,UAAU,CAACE,YAAD,CAAV,CACD,CACD,QAASE,CAAAA,QAAT,CAAkBF,YAAlB,CAAgCG,YAAhC,CAA8C,CAC5CL,UAAU,CAACE,YAAD,CAAV,CACD,CAED,mBACE,wCACE,KAAC,WAAD,EACE,OAAO,CAAEN,KAAO;AADlB,CAEE,cAAc,CAAEG,OAAS;AAF3B,CAGE,QAAQ,CAAEE,QAAU;AAHtB,CAIE,QAAQ,CAAEG,QAAU;AAJtB,CAKE,YAAY,CAAC,MAAO;AALtB,CAME,WAAW,CAAC,sBANd,CAOE,YAAY,CAAE,IAPhB,CAQE,aAAa,CAAE,IARjB,EADF,cAWE,KAAC,mBAAD,EAAqB,MAAM,CAAET,MAA7B,CAAqC,OAAO,CAAEI,OAA9C,EAXF,GADF,CAeD,CAxCD,CA0CA,cAAeX,CAAAA,GAAf","sourcesContent":["import \"./App.css\";\nimport useGoogleCharts from \"./useGoogleCharts\";\nimport PerformanceTimeline from \"./PerformanceTimeline\";\nimport { Multiselect } from \"multiselect-react-dropdown\";\nimport { useState } from \"react\";\n\nconst App = () => {\n\n  window.addEventListener(\"message\", (event) => {\n    console.log(event.data)\n  });\n\n  const google = useGoogleCharts();\n  const types = [\n    { name: \"resource\", id: 1 },\n    { name: \"mark\", id: 2 },\n    { name: \"measure\", id: 3 },\n    { name: \"paint\", id: 4 },\n    { name: \"navigation\", id: 5 },\n    { name: \"first-input\", id: 6 },\n    { name: \"frog calls\", id: 7 },\n  ];\n  const [filters, setFilters] = useState(types);\n\n  function onSelect(selectedList, _selectedItem) {\n    setFilters(selectedList);\n  }\n  function onRemove(selectedList, _removedItem) {\n    setFilters(selectedList);\n  }\n\n  return (\n    <>\n      <Multiselect\n        options={types} // Options to display in the dropdown\n        selectedValues={filters} // Preselected value to persist in dropdown\n        onSelect={onSelect} // Function will trigger on select event\n        onRemove={onRemove} // Function will trigger on remove event\n        displayValue=\"name\" // Property name to display in the dropdown options\n        placeholder='Please select filter'\n        showCheckbox={true}\n        closeOnSelect={true}\n      />\n      <PerformanceTimeline google={google} filters={filters} />\n    </>\n  );\n};\n\nexport default App;\n\n"]},"metadata":{},"sourceType":"module"}