{"ast":null,"code":"var _jsxFileName = \"/Users/chenk/performance/ChenK14.github.io/chenk14.github.io/src/App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport useGoogleCharts from \"./useGoogleCharts\";\nimport PerformanceTimeline from \"./PerformanceTimeline\";\nimport { Multiselect } from \"multiselect-react-dropdown\";\nimport { Fragment, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [fileSelected, setFileSelected] = useState(false);\n  window.addEventListener(\"message\", event => {\n    console.log(event);\n  });\n  const google = useGoogleCharts();\n  const types = [{\n    name: \"resource\",\n    id: 1\n  }, {\n    name: \"mark\",\n    id: 2\n  }, {\n    name: \"measure\",\n    id: 3\n  }, {\n    name: \"paint\",\n    id: 4\n  }, {\n    name: \"navigation\",\n    id: 5\n  }, {\n    name: \"first-input\",\n    id: 6\n  }, {\n    name: \"frog calls\",\n    id: 7\n  }];\n  const [filters, setFilters] = useState(types);\n\n  function onSelect(selectedList, _selectedItem) {\n    setFilters(selectedList);\n  }\n\n  function onRemove(selectedList, _removedItem) {\n    setFilters(selectedList);\n  }\n\n  const foundFile = () => {\n    const fileSelector = document.getElementById('file-selector');\n    fileSelector.addEventListener('change', event => {\n      const fileList = event.target.files[0];\n      console.log(fileList.data);\n    });\n    setFileSelected(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      id: \"file-selector\",\n      onInput: foundFile\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), fileSelected && /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Multiselect, {\n        options: types // Options to display in the dropdown\n        ,\n        selectedValues: filters // Preselected value to persist in dropdown\n        ,\n        onSelect: onSelect // Function will trigger on select event\n        ,\n        onRemove: onRemove // Function will trigger on remove event\n        ,\n        displayValue: \"name\" // Property name to display in the dropdown options\n        ,\n        placeholder: \"Please select filter\",\n        showCheckbox: true,\n        closeOnSelect: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(PerformanceTimeline, {\n        google: google,\n        filters: filters\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(App, \"59uopnvlPDJCtHcElidix6uNBBA=\", false, function () {\n  return [useGoogleCharts];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/chenk/performance/ChenK14.github.io/chenk14.github.io/src/App.js"],"names":["useGoogleCharts","PerformanceTimeline","Multiselect","Fragment","useState","App","fileSelected","setFileSelected","window","addEventListener","event","console","log","google","types","name","id","filters","setFilters","onSelect","selectedList","_selectedItem","onRemove","_removedItem","foundFile","fileSelector","document","getElementById","fileList","target","files","data"],"mappings":"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","sourcesContent":["import \"./App.css\";\nimport useGoogleCharts from \"./useGoogleCharts\";\nimport PerformanceTimeline from \"./PerformanceTimeline\";\nimport { Multiselect } from \"multiselect-react-dropdown\";\nimport { Fragment, useState } from \"react\";\n\nconst App = () => {\n\n  const [fileSelected, setFileSelected]= useState(false)\n\n  window.addEventListener(\"message\", (event) => {\n    console.log(event)\n  });\n\n  const google = useGoogleCharts();\n  const types = [\n    { name: \"resource\", id: 1 },\n    { name: \"mark\", id: 2 },\n    { name: \"measure\", id: 3 },\n    { name: \"paint\", id: 4 },\n    { name: \"navigation\", id: 5 },\n    { name: \"first-input\", id: 6 },\n    { name: \"frog calls\", id: 7 },\n  ];\n  const [filters, setFilters] = useState(types);\n\n  function onSelect(selectedList, _selectedItem) {\n    setFilters(selectedList);\n  }\n  function onRemove(selectedList, _removedItem) {\n    setFilters(selectedList);\n  }\n\n  const foundFile = ()=>{\n    const fileSelector = document.getElementById('file-selector');\n    fileSelector.addEventListener('change', (event) => {\n      const fileList = event.target.files[0];\n      console.log(fileList.data);\n    });\n    setFileSelected(true)\n  }\n\n\n  return (\n    <>\n      <input type='file' id='file-selector' onInput={foundFile}/>\n      {fileSelected &&\n        <Fragment>\n          <Multiselect\n            options={types} // Options to display in the dropdown\n            selectedValues={filters} // Preselected value to persist in dropdown\n            onSelect={onSelect} // Function will trigger on select event\n            onRemove={onRemove} // Function will trigger on remove event\n            displayValue=\"name\" // Property name to display in the dropdown options\n            placeholder='Please select filter'\n            showCheckbox={true}\n            closeOnSelect={true}\n          />\n          <PerformanceTimeline google={google} filters={filters} />\n        </Fragment>\n      }\n    </>\n  );\n};\n\nexport default App;\n\n"]},"metadata":{},"sourceType":"module"}