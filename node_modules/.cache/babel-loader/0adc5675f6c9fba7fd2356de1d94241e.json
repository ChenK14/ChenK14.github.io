{"ast":null,"code":"var _jsxFileName = \"/Users/chenk/performance/preformace/src/App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport useGoogleCharts from \"./useGoogleCharts\";\nimport PerformanceTimeline from \"./PerformanceTimeline\";\nimport { Multiselect } from \"multiselect-react-dropdown\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const google = useGoogleCharts();\n  const [filter, setFilter] = useState([]);\n  const types = [{\n    name: '',\n    id: 1\n  }];\n\n  function onSelect(selectedList, _selectedItem) {\n    setFilter(selectedList);\n  }\n\n  function onSelect(selectedList, _selectedItem) {\n    setFilter(selectedList);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Multiselect, {\n      options: types // Options to display in the dropdown\n      ,\n      selectedValues: types // Preselected value to persist in dropdown\n      ,\n      onSelect: onSelect // Function will trigger on select event\n      ,\n      onRemove: this.onRemove // Function will trigger on remove event\n      ,\n      displayValue: \"name\" // Property name to display in the dropdown options\n\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(PerformanceTimeline, {\n      google: google,\n      filter: filter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"H9t4oOS4x7YOEJ6MgsViMXaZko8=\", false, function () {\n  return [useGoogleCharts];\n});\n\n_c = App;\nexport default App;\n\nconst onSelect = (selectedList, selectedItem) => {};\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/chenk/performance/preformace/src/App.js"],"names":["useGoogleCharts","PerformanceTimeline","Multiselect","useState","App","google","filter","setFilter","types","name","id","onSelect","selectedList","_selectedItem","onRemove","selectedItem"],"mappings":";;;AAAA,OAAO,WAAP;AACA,OAAOA,eAAP,MAA4B,mBAA5B;AACA,OAAOC,mBAAP,MAAgC,uBAAhC;AACA,SAAQC,WAAR,QAA0B,4BAA1B;AACA,SAAQC,QAAR,QAAuB,OAAvB;;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAMC,MAAM,GAAGL,eAAe,EAA9B;AACA,QAAK,CAACM,MAAD,EAAQC,SAAR,IAAmBJ,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAMK,KAAK,GAAC,CACR;AAACC,IAAAA,IAAI,EAAC,EAAN;AAASC,IAAAA,EAAE,EAAC;AAAZ,GADQ,CAAZ;;AAIF,WAASC,QAAT,CAAkBC,YAAlB,EAAgCC,aAAhC,EAA8C;AAC1CN,IAAAA,SAAS,CAACK,YAAD,CAAT;AACH;;AACD,WAASD,QAAT,CAAkBC,YAAlB,EAAgCC,aAAhC,EAA8C;AAC1CN,IAAAA,SAAS,CAACK,YAAD,CAAT;AACH;;AAEC,sBACE;AAAA,4BACI,QAAC,WAAD;AACI,MAAA,OAAO,EAAEJ,KADb,CACoB;AADpB;AAEI,MAAA,cAAc,EAAEA,KAFpB,CAE2B;AAF3B;AAGI,MAAA,QAAQ,EAAEG,QAHd,CAGwB;AAHxB;AAII,MAAA,QAAQ,EAAE,KAAKG,QAJnB,CAI6B;AAJ7B;AAKI,MAAA,YAAY,EAAC,MALjB,CAKwB;;AALxB;AAAA;AAAA;AAAA;AAAA,YADJ,eAQE,QAAC,mBAAD;AAAqB,MAAA,MAAM,EAAET,MAA7B;AAAqC,MAAA,MAAM,EAAEC;AAA7C;AAAA;AAAA;AAAA;AAAA,YARF;AAAA,kBADF;AAYD;;GA1BQF,G;UACQJ,e;;;KADRI,G;AA4BT,eAAeA,GAAf;;AAEA,MAAMO,QAAQ,GAAC,CAACC,YAAD,EAAeG,YAAf,KAA+B,CAE7C,CAFD","sourcesContent":["import \"./App.css\";\nimport useGoogleCharts from \"./useGoogleCharts\";\nimport PerformanceTimeline from \"./PerformanceTimeline\";\nimport {Multiselect} from \"multiselect-react-dropdown\";\nimport {useState} from \"react\";\n\nfunction App() {\n  const google = useGoogleCharts();\n  const[filter,setFilter]=useState([])\n  const types=[\n      {name:'',id:1}\n  ]\n\nfunction onSelect(selectedList, _selectedItem){\n    setFilter(selectedList);\n}\nfunction onSelect(selectedList, _selectedItem){\n    setFilter(selectedList);\n}\n\n  return (\n    <>\n        <Multiselect\n            options={types} // Options to display in the dropdown\n            selectedValues={types} // Preselected value to persist in dropdown\n            onSelect={onSelect} // Function will trigger on select event\n            onRemove={this.onRemove} // Function will trigger on remove event\n            displayValue=\"name\" // Property name to display in the dropdown options\n        />\n      <PerformanceTimeline google={google} filter={filter} />\n    </>\n  );\n}\n\nexport default App;\n\nconst onSelect=(selectedList, selectedItem) =>{\n\n}\n"]},"metadata":{},"sourceType":"module"}