{"ast":null,"code":"var _jsxFileName = \"/Users/chenk/performance/preformace/src/Option.js\";\nimport * as React from 'react';\nimport { MultiSelectComponent } from '@syncfusion/ej2-react-dropdowns';\nimport { Query } from '@syncfusion/ej2-data';\nimport { debounce } from '@syncfusion/ej2-base';\nimport { SampleBase } from '../common/sample-base';\nimport './style.css';\nimport * as data from './dataSource.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class Filtering extends SampleBase {\n  constructor() {\n    super(...arguments);\n    this.temp = 'countries'; //define the filtering data\n\n    this.data = data[this.temp];\n    this.query = new Query(); // maps the appropriate column to fields property\n\n    this.fields = {\n      text: 'Name',\n      value: 'Code'\n    }; // filtering event handler to filter a country\n\n    this.onFiltering = debounce(e => {\n      let query = new Query(); //frame the query based on search string with filter type.\n\n      query = e.text != \"\" ? query.where(\"Name\", \"startswith\", e.text, true) : query; //pass the filter data source, filter query to updateData method.\n\n      e.updateData(this.data, query);\n    }, 400);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"control-pane\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"control-section\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"multifilter\",\n          className: \"control-styles\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Filtering\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(MultiSelectComponent, {\n            id: \"comboelement\",\n            dataSource: this.data,\n            filtering: this.onFiltering.bind(this),\n            allowFiltering: true,\n            fields: this.fields,\n            placeholder: \"Select countries\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/chenk/performance/preformace/src/Option.js"],"names":["React","MultiSelectComponent","Query","debounce","SampleBase","data","Filtering","constructor","arguments","temp","query","fields","text","value","onFiltering","e","where","updateData","render","bind"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,oBAAT,QAAqC,iCAArC;AACA,SAASC,KAAT,QAAsB,sBAAtB;AACA,SAASC,QAAT,QAAyB,sBAAzB;AACA,SAASC,UAAT,QAA2B,uBAA3B;AACA,OAAO,aAAP;AACA,OAAO,KAAKC,IAAZ,MAAsB,mBAAtB;;AACA,OAAO,MAAMC,SAAN,SAAwBF,UAAxB,CAAmC;AACtCG,EAAAA,WAAW,GAAG;AACV,UAAM,GAAGC,SAAT;AACA,SAAKC,IAAL,GAAY,WAAZ,CAFU,CAGV;;AACA,SAAKJ,IAAL,GAAYA,IAAI,CAAC,KAAKI,IAAN,CAAhB;AACA,SAAKC,KAAL,GAAa,IAAIR,KAAJ,EAAb,CALU,CAMV;;AACA,SAAKS,MAAL,GAAc;AAAEC,MAAAA,IAAI,EAAE,MAAR;AAAgBC,MAAAA,KAAK,EAAE;AAAvB,KAAd,CAPU,CAQV;;AACA,SAAKC,WAAL,GAAmBX,QAAQ,CAAEY,CAAD,IAAO;AAC/B,UAAIL,KAAK,GAAG,IAAIR,KAAJ,EAAZ,CAD+B,CAE/B;;AACAQ,MAAAA,KAAK,GAAIK,CAAC,CAACH,IAAF,IAAU,EAAX,GAAiBF,KAAK,CAACM,KAAN,CAAY,MAAZ,EAAoB,YAApB,EAAkCD,CAAC,CAACH,IAApC,EAA0C,IAA1C,CAAjB,GAAmEF,KAA3E,CAH+B,CAI/B;;AACAK,MAAAA,CAAC,CAACE,UAAF,CAAa,KAAKZ,IAAlB,EAAwBK,KAAxB;AACH,KAN0B,EAMxB,GANwB,CAA3B;AAOH;;AACDQ,EAAAA,MAAM,GAAG;AACL,wBAAQ;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,6BACJ;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA,+BACI;AAAK,UAAA,EAAE,EAAC,aAAR;AAAsB,UAAA,SAAS,EAAC,gBAAhC;AAAA,kCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,oBAAD;AAAsB,YAAA,EAAE,EAAC,cAAzB;AAAwC,YAAA,UAAU,EAAE,KAAKb,IAAzD;AAA+D,YAAA,SAAS,EAAE,KAAKS,WAAL,CAAiBK,IAAjB,CAAsB,IAAtB,CAA1E;AAAuG,YAAA,cAAc,EAAE,IAAvH;AAA6H,YAAA,MAAM,EAAE,KAAKR,MAA1I;AAAkJ,YAAA,WAAW,EAAC;AAA9J;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADI;AAAA;AAAA;AAAA;AAAA,YAAR;AASH;;AA5BqC","sourcesContent":["import * as React from 'react';\nimport { MultiSelectComponent } from '@syncfusion/ej2-react-dropdowns';\nimport { Query } from '@syncfusion/ej2-data';\nimport { debounce } from '@syncfusion/ej2-base';\nimport { SampleBase } from '../common/sample-base';\nimport './style.css';\nimport * as data from './dataSource.json';\nexport class Filtering extends SampleBase {\n    constructor() {\n        super(...arguments);\n        this.temp = 'countries';\n        //define the filtering data\n        this.data = data[this.temp];\n        this.query = new Query();\n        // maps the appropriate column to fields property\n        this.fields = { text: 'Name', value: 'Code' };\n        // filtering event handler to filter a country\n        this.onFiltering = debounce((e) => {\n            let query = new Query();\n            //frame the query based on search string with filter type.\n            query = (e.text != \"\") ? query.where(\"Name\", \"startswith\", e.text, true) : query;\n            //pass the filter data source, filter query to updateData method.\n            e.updateData(this.data, query);\n        }, 400);\n    }\n    render() {\n        return (<div className='control-pane'>\n            <div className='control-section'>\n                <div id='multifilter' className=\"control-styles\">\n                    <h4>Filtering</h4>\n                    <MultiSelectComponent id=\"comboelement\" dataSource={this.data} filtering={this.onFiltering.bind(this)} allowFiltering={true} fields={this.fields} placeholder=\"Select countries\"/>\n                </div>\n            </div>\n\n        </div>);\n    }\n}"]},"metadata":{},"sourceType":"module"}